{"version":3,"sources":["reducers/reducers.tsx","store/store.js","components/main-info.jsx","actions/actions.tsx","functions.tsx","components/main-form.tsx","pages/main-page.jsx","pages/sign-in.jsx","pages/sign-up.jsx","pages/new-password.jsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["initialState","currentUser","currentId","checkedId","jwtToken","bdRows","rootReducer","state","action","payload","type","console","log","filter","item","id","editBdRow","map","bdRow","persName","bdDate","bdComm","bdTmz","bdPeriod","jwtData","email","history","createBrowserHistory","logger","createLogger","conmposedEnh","compose","applyMiddleware","routerMiddleware","store","createStore","combineReducers","router","connectRouter","connect","dispatch","delBdRow","newbdRow","checkIdBdRow","props","handleEditButtonClick","bdRowId","getState","_","find","getRowById","$","html","val","Row","md","className","Col","Table","index","Button","variant","onClick","registerLocale","ru","periodArr","timeZones","momenttz","tz","names","tmzArr","i","tmzObj","timeZoneValue","timeZoneText","moment","format","push","addBdRow","editbdRow","useState","validated","setValidated","setHours","setMinutes","Date","startDate","setStartDate","Form","noValidate","onSubmit","e","preventDefault","currentTarget","checkValidity","buttonAdd","persNameVal","bdDateVal","bdCommVal","bdTmzVal","bdPeriodVal","Group","as","controlId","Label","Control","required","Feedback","locale","selected","onChange","date","showTimeSelect","dateFormat","defaultValue","period","value","periodSelectField","tmzSelectField","rows","size","block","MainPage","authHeader","jwt","JSON","parse","localStorage","getItem","Authorization","logOut","removeItem","handlerLoading","loading","handlerSaveToServer","data","currUserEmail","sendBDtoServer","handlerStartCronTasksOnServer","handlerStopCronTasksOnServer","handlerLoadFromServer","loadBDfromServer","myRef","React","createRef","historyState","location","needLoadData","this","axios","post","then","response","statusText","res","catch","error","setState","config","headers","token","aaa","bd","json","bdData","setTimeout","loadBD","Container","to","Alert","Component","goTo","path","goOne","go","num","back","goBack","forw","goForward","Copyright","Typography","color","align","getFullYear","useStyles","makeStyles","theme","paper","marginTop","spacing","display","flexDirection","alignItems","avatar","margin","backgroundColor","palette","secondary","main","form","width","submit","classes","component","maxWidth","CssBaseline","TextField","fullWidth","label","name","autoComplete","autoFocus","document","getElementById","password","username","setItem","stringify","db","pathname","Grid","container","xs","Link","href","Box","mt","SignUp","justifyContent","text","SignIn","App","loggedIn","isEmpty","NewPass","exact","PureComponent","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render"],"mappings":"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","file":"static/js/main.ed8edd46.chunk.js","sourcesContent":["import { combineReducers } from \"redux\";\nimport { connectRouter } from \"connected-react-router\";\nimport { IAction, IRootReducer, IBdRow, TActionPayload, IJwtData } from \"../interfaces\";\n\n\n// export const initialState : IRootReducer = {\n//     //currentUser: '',\n//     currentUser: 'test@test',\n//     currentId: 0,\n//     checkedId: 0,\n//     jwtToken: {jwt: \"sfsfsd\"},\n//     //jwtToken: {},\n//     bdRows: [],\n// };\n\nexport const initialState : IRootReducer = {\n  // router: {\n  //   location: {},\n  //   action: \"POP\",\n  // },\n  // rootReducer: {\n    currentUser: '',\n    currentId: 0,\n    checkedId: 0,\n    jwtToken: {},\n    bdRows: [],\n//  },\n};\n\n// export const initialState : IRootReducer = {\n//  // export const initialState = {\n//   // router: {\n//   //   location: {},\n//   //   action: \"POP\",\n//   // },\n//   // rootReducer: {\n//     currentUser: \"test@test\",\n//     currentId: 4,\n//     checkedId: 0,\n//     bdRows: [\n//       {\n//         id: 1,\n//         persName: \"Иванов Иван Иванович\",\n//         bdDate: \"13.01.2021, 23:09\",\n//         bdComm: \"Комментарий\",\n//         bdTmz: \"Asia/Yekaterinburg\",\n//         bdPeriod: \"Без повторов\"\n//       },\n//       {\n//         id: 2,\n//         persName: \"Сидоров Андрей Петрович\",\n//         bdDate: \"10.01.2021, 20:27\",\n//         bdComm: \"Длинный комментарий\",\n//         bdTmz: \"Asia/Yekaterinburg\",\n//         bdPeriod: \"Ежедневно\"\n//       },\n//       {\n//         id: 4,\n//         persName: \"Петров Иван Васильевич\",\n//         bdDate: \"13.01.2021, 23:08\",\n//         bdComm: \"Очень длинный комментарий\",\n//         bdTmz: \"Asia/Yekaterinburg\",\n//         bdPeriod: \"Ежегодно\"\n        \n//       },\n//     ],\n//  // },\n// };\n\nexport function rootReducer(state : IRootReducer = initialState , action: IAction) {\nconst payload: TActionPayload = action.payload;\nconst type: string = action.type;\nswitch (action.type) {\n    // всегда возвращаем новый state!\n    case \"DRAW_ROWS\": {\n      return { ...state, bdRows: action.payload };\n    }\n    case \"CHECK_ID_ROW\": {\n      return { ...state, checkedId: action.payload };\n    }\n    case \"ADD_BD_ROW\": {\n      return {\n        ...state,\n        currentId: state.currentId + 1,\n        bdRows: [...state.bdRows, action.payload],\n      };\n    }\n    case \"DEL_BD_ROW\": {\n      console.log(state);\n      return {\n        ...state,\n        bdRows: [...state.bdRows.filter((item) => item.id !== action.payload)],\n      };\n    }\n    case \"EDIT_BD_ROW\": { // редактирование записи\n      const editBdRow: IBdRow=action.payload as IBdRow;\n      return {\n        ...state, // возвращаем новый state\n        bdRows: state.bdRows.map((bdRow) => {\n          if (bdRow.id === editBdRow.id) {\n            return {\n              ...bdRow, // возвращаем новый bdRow с новыми полями после ,\n              persName: editBdRow.persName,\n              bdDate: editBdRow.bdDate,\n              bdComm: editBdRow.bdComm,\n              bdTmz: editBdRow.bdTmz,\n              bdPeriod: editBdRow.bdPeriod,\n            };\n          }\n          return bdRow; // в map возвращаем новый собранный bdRow\n        }),\n      };\n    }\n    case \"LOAD_BD\": {\n      return action.payload;\n    }\n    case \"LOGIN_SAVE_STORE\": {\n      const jwtData: IJwtData = action.payload as IJwtData;\n\n      console.log(jwtData);\n      return { ...state, currentUser: jwtData.email, jwtToken: jwtData.jwtToken };\n    }\n    default:\n      return state;\n  }\n}\n\n// данные в объекте rootReducer, а не store\nexport const createRootReducer = (history: any) =>\n  combineReducers({\n    router: connectRouter(history),\n    rootReducer,\n  });\n","import { createStore, applyMiddleware, compose } from \"redux\";\nimport { createLogger } from \"redux-logger\";\nimport { routerMiddleware } from \"connected-react-router\";\nimport { createBrowserHistory } from \"history\"; // версия библиотеки должна быть 4.10.1 : npm install history@4.10.1\nimport { createRootReducer, initialState } from \"../reducers/reducers\";\n\nexport const history = createBrowserHistory();\n\nconst logger = createLogger({});\nconst conmposedEnh = compose(\n  applyMiddleware(logger, routerMiddleware(history))\n);\n\nexport const store = createStore(\n  createRootReducer(history),\n  initialState,\n  conmposedEnh\n);\n","import React from \"react\";\nimport { connect } from \"react-redux\";\nimport $ from \"jquery\";\nimport {\n  Row, Col, Table, Button\n} from \"react-bootstrap\";\nimport moment from \"moment\";\nimport { delBdRow, checkIdBdRow } from \"../actions/actions\";\nimport { getRowById } from \"../functions\";\n\nfunction MainInfo(props) {\n  // console.log(props)\n  const { bdRows } = props;\n\n  const handleDelButtonClick = (bdRowId) => {\n    // console.log(bdRowId);\n    props.delBdRow(bdRowId);\n  };\n  const handleEditButtonClick = (bdRowId) => {\n    // console.log(bdRowId);\n    props.checkIdBdRow(bdRowId);\n    const bdRow = getRowById(bdRowId);\n    // console.log(bdRow);\n    $(\"#buttonAdd\").html(\"Редактировать\");\n    if (bdRow) {\n      //const bdDate = moment(bdRow.bdDate).format(\"YYYY-MM-DD\");\n      const bdDate = bdRow.bdDate;\n      $(\"#persName\").val(bdRow.persName);\n      $(\"#bdDate\").val(bdDate);\n      $(\"#bdComm\").val(bdRow.bdComm);\n      $(\"#bdTmz\").val(bdRow.bdTmz);\n      $(\"#bdPeriod\").val(bdRow.bdPeriod);\n    }\n  };\n\n  return (\n    <Row md className=\"main-page__bd-info\">\n      <Col>\n        <Table>\n          <thead>\n            <tr>\n              <th>№</th>\n              <th>Название</th>\n              <th>Подробности</th>\n              <th>Дата, время</th>\n              <th>Период</th>\n            </tr>\n          </thead>\n          <tbody>\n            {bdRows.map((bdRow, index) => (\n              <tr key={bdRow.id}>\n                <td>{index + 1}</td>\n                <td>{bdRow.persName}</td>\n                <td>{bdRow.bdComm}</td>\n                <td>{bdRow.bdDate}</td>\n                <td>{bdRow.bdPeriod}</td>\n                <td>\n                  <div>\n                    <Button\n                      variant=\"light\"\n                      onClick={() => handleEditButtonClick(bdRow.id)}\n                    >\n                      Р\n                    </Button>\n                  </div>\n                </td>\n                <td>\n                  <div>\n                    <Button\n                      variant=\"light\"\n                      onClick={() => handleDelButtonClick(bdRow.id)}\n                    >\n                      У\n                    </Button>\n                  </div>\n                </td>\n              </tr>\n            ))}\n          </tbody>\n        </Table>\n      </Col>\n    </Row>\n  );\n}\n\nconst mapStateToProps = (store) => ({\n  // bdRows:store.bdRows,\n});\nconst mapDispatchToProps = (dispatch) => ({\n  delBdRow: (newbdRow) => dispatch(delBdRow(newbdRow)),\n  checkIdBdRow: (newbdRow) => dispatch(checkIdBdRow(newbdRow)),\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(MainInfo);\n","import { IAction, IRootReducer, IBdRows, IBdRow } from \"../interfaces\";\nexport function drawRows(bdRows: IBdRows): IAction {\n  return {\n    type: \"DRAW_ROWS\",\n    payload: bdRows,\n  };\n}\nexport function checkIdBdRow(checkedId: number): IAction {\n  return {\n    type: \"CHECK_ID_ROW\",\n    payload: checkedId,\n  };\n}\nexport function addBdRow(bdRow: IBdRow): IAction {\n  return {\n    type: \"ADD_BD_ROW\",\n    payload: bdRow,\n  };\n}\nexport function delBdRow(bdRow: IBdRow): IAction {\n  return {\n    type: \"DEL_BD_ROW\",\n    payload: bdRow,\n  };\n}\nexport function editBdRow(bdRow: IBdRow): IAction {\n  return {\n    type: \"EDIT_BD_ROW\",\n    payload: bdRow,\n  };\n}\nexport function loadBD(bd:IRootReducer): IAction {\n  return {\n    type: \"LOAD_BD\",\n    payload: bd,\n  };\n}\nexport function loginSaveStore(loginData:IRootReducer): IAction {\n  return {\n    type: \"LOGIN_SAVE_STORE\",\n    payload: loginData,\n  };\n}\n","import _ from \"lodash\";\nimport { store } from \"./store/store\";\nimport { IBdRow } from \"./interfaces\";\n\nexport function getCurrentId(): number {\n  const { currentId } = store.getState().rootReducer;\n  return currentId;\n}\nexport function getRowById(bdRowId: number): IBdRow {\n  const { bdRows } = store.getState().rootReducer;\n  const bdRow = _.find(bdRows, { id: bdRowId }); // через lodash\n  return bdRow;\n}\n","import React, { useState } from \"react\";\nimport {\n  Row, Col, Form, Button\n} from \"react-bootstrap\";\nimport $ from \"jquery\";\nimport { connect } from \"react-redux\";\n// import Functions from \"../functions\";\nimport moment from \"moment\";\nimport momenttz from \"moment-timezone\";\nimport DatePicker, { registerLocale, setDefaultLocale } from  \"react-datepicker\";\nimport ru from 'date-fns/locale/ru';\nimport setHours from \"date-fns/setHours\";\nimport setMinutes from \"date-fns/setMinutes\";\nimport \"react-datepicker/dist/react-datepicker.css\";\nimport { getCurrentId } from \"../functions\";\nimport { addBdRow, editBdRow } from \"../actions/actions\";\nimport { IAction, IRootReducer, IBdRows, IBdRow, IStore, ItmzObj } from \"../interfaces\";\nregisterLocale('ru', ru)\n\n// import { store } from \"../store/store\";\n// import { extendWith } from \"lodash\";\nconst TIMEZONE: string = \"Asia/Yekaterinburg\";\nconst DEFAULTPERIOD: string = \"Без повторов\";\nconst periodArr: string[] = [\"Без повторов\",  \"Ежедневно\", \"Еженедельно\", \"ПН-ПТ\", \"Ежемесячно\", \"Ежегодно\"];\n//const TIMEZONE = \"Europe/Moscow\";\n\nconst timeZones = momenttz.tz.names();\nconst tmzArr: ItmzObj[]=[];\nfor(let i in timeZones)\n{\n  const tmzObj: ItmzObj =\n  {timeZoneValue:  timeZones[i],\n   timeZoneText: \" (GMT\"+moment.tz(timeZones[i]).format('Z')+\") \" + timeZones[i]}\n   tmzArr.push(tmzObj);\n}\n\ninterface IProps {\n  addBdRow: (newbdRow: IBdRow) => void;\n  checkedId: number;\n  editBdRow: (newbdRow: IBdRow) => void;\n}\n\nfunction MainForm(props: IProps) {\n  // const bdRows = props.bdRows;\n  const [validated, setValidated] = useState(false);\n  const [startDate, setStartDate] = useState<any>(\n    setHours(setMinutes(new Date(), 0), 9)\n  );\n\n  const tmzSelectField = (tmzObj: any) => {\n    return(\n      <option value={tmzObj.timeZoneValue}>{tmzObj.timeZoneText}</option>\n    )\n  }\n  const periodSelectField = (period: string) => {\n    return(\n      <option value={period}>{period}</option>\n    )\n  }\n  \n\n  const handleAddButtonClick = (e: React.SyntheticEvent) => {\n    e.preventDefault();\n    const form: any = e.currentTarget;\n\n    if (form.checkValidity() === false) {\n      setValidated(true);\n    } else {\n      const buttonAdd = $(\"#buttonAdd\").html();\n      const persNameVal:string= $(\"#persName\").val() as string;\n      const bdDateVal:string = $(\"#bdDateTime\").val() as string;\n      const bdCommVal:string = $(\"#bdComm\").val() as string;\n      const bdTmzVal:string = $(\"#bdTmz\").val() as string;\n      const bdPeriodVal:string = $(\"#bdPeriod\").val() as string;\n      \n      //console.log(bdDateVal);\n\n      if (buttonAdd === \"Добавить\") {\n        const newbdRow: IBdRow = {\n          id: getCurrentId() + 1,\n          persName: persNameVal,\n          bdDate: bdDateVal,\n          bdComm: bdCommVal,\n          bdTmz: bdTmzVal,\n          bdPeriod: bdPeriodVal,\n        };\n        props.addBdRow(newbdRow);\n      }\n      if (buttonAdd === \"Редактировать\") {\n        //const bdDate = moment(bdDateVal).format(\"DD.MM.YYYY\");\n        const newbdRow = {\n          id: props.checkedId,\n          persName: persNameVal,\n          bdDate: bdDateVal,\n          bdComm: bdCommVal,\n          bdTmz: bdTmzVal,\n          bdPeriod: bdPeriodVal\n        };\n        // console.log(newbdRow);\n        props.editBdRow(newbdRow);\n        $(\"#buttonAdd\").html(\"Добавить\");\n        // очищаем поля\n        $(\"#persName\").val(\"\");\n        $(\"#bdDate\").val(\"\");\n        $(\"#bdComm\").val(\"\");\n        // $(\"#bdPeriod\").val(\"\");\n      }\n    }\n  };\n  return (\n    <Row md={1} className=\"main-page__bd-form\">\n      <Col>\n        <Form noValidate validated={validated} onSubmit={handleAddButtonClick}>\n          <Form.Row>\n            <Form.Group as={Col} controlId=\"persName\">\n              <Form.Label>Название уведомления:</Form.Label>\n              <Form.Control required type=\"text\" />\n              <Form.Control.Feedback type=\"invalid\">\n                Заполните поле\n              </Form.Control.Feedback>\n              {/* <Form.Text className=\"text-muted\">Название уведомления</Form.Text> */}\n            </Form.Group>\n\n            {/* <Form.Group as={Col} controlId=\"bdDate\">\n              <Form.Label>Дата, время уведомления:</Form.Label>\n              <Form.Control required type=\"date\" placeholder=\"01.02.1989\" />\n              <Form.Control.Feedback type=\"invalid\">\n                Заполните поле\n              </Form.Control.Feedback>\n            </Form.Group> */}\n\n            <Form.Group as={Col} controlId=\"bdDate\">\n              <Form.Label>Дата, время уведомления:</Form.Label>\n              <DatePicker\n                id=\"bdDateTime\"\n                className=\"form-control\"\n                locale=\"ru\"\n                selected={startDate}\n                onChange={date => date && setStartDate(date)}\n                showTimeSelect\n                // timeFormat=\"HH:mm\"\n                // dateFormat=\"mm dd, yyyy h:mm aa\"\n                dateFormat=\"Pp\"\n              />\n            </Form.Group>\n\n          </Form.Row>\n          \n          <Form.Row>\n            <Form.Group as={Col} controlId=\"bdPeriod\">\n              <Form.Label>Периодичность уведомления:</Form.Label>\n              <Form.Control as=\"select\" defaultValue={DEFAULTPERIOD}> \n                {periodArr.map((period: string)=> periodSelectField(period))}\n              </Form.Control> \n            </Form.Group>\n\n            <Form.Group as={Col} controlId=\"bdTmz\">\n              <Form.Label>Часовой пояс:</Form.Label>\n              <Form.Control as=\"select\" defaultValue={TIMEZONE}> \n                {tmzArr.map((tmzObj: any)=> tmzSelectField(tmzObj))}\n              </Form.Control> \n            </Form.Group>\n          </Form.Row>\n\n          <Form.Group controlId=\"bdComm\">\n            <Form.Label>Подробности по уведомлению:</Form.Label>\n            <Form.Control as=\"textarea\" rows={3} />\n          </Form.Group>\n\n          {/* <Button type=\"submit\" variant=\"success\" size=\"lg\" block>Добавить</Button> */}\n          <Button id=\"buttonAdd\" type=\"submit\" variant=\"light\" size=\"lg\" block>\n            Добавить\n          </Button>\n        </Form>\n      </Col>\n    </Row>\n  );\n}\nconst mapStateToProps = (store: IStore) => ({\n  bdRows: store.rootReducer.bdRows,\n  checkedId: store.rootReducer.checkedId,\n});\nconst mapDispatchToProps = (dispatch: any) => ({\n  addBdRow: (newbdRow: IBdRow) => dispatch(addBdRow(newbdRow)),\n  editBdRow: (editbdRow: IBdRow) => dispatch(editBdRow(editbdRow)),\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(MainForm);\n","import React from \"react\";\nimport { Container, Alert } from \"react-bootstrap\";\nimport { connect } from \"react-redux\";\nimport { Link } from \"react-router-dom\";\nimport {\n  push, go, goBack, goForward\n} from \"connected-react-router\";\nimport axios from \"axios\";\nimport MainInfo from \"../components/main-info\";\nimport MainForm from \"../components/main-form\";\nimport \"../style.scss\";\nimport { store, history } from \"../store/store\";\nimport { loadBD } from \"../actions/actions\";\n\nimport moment from \"moment\";\n\n  ///!!!\n  // const repeatMap = {\n  //   \"norep\" : \"Без повторов\",\n  //   \"evday\" : \"Ежедневно\",\n  //   \"evweek\" : \"Еженедельно\",\n  //   \"evwkweek\" : \"ПН-ПТ\",\n  //   \"evmonth\" : \"Ежемесячно\",\n  //   \"evyear\" : \"Ежегодно\"\n  //  }\n  ///!!!\n\nclass MainPage extends React.Component {\n  constructor() {\n    super();\n    this.state = { loading: false };\n    this.myRef = React.createRef();\n  }\n\n  componentDidMount(){\n    const historyState = history.location.state;\n    if (historyState){\n      const needLoadData = historyState.needLoadData;\n      if (needLoadData){\n        //const currUserEmail = store.getState().rootReducer.currentUser;\n        this.handlerLoadFromServer();\n      }\n    }\n  }\n\n  authHeader = () => {\n    const jwt = JSON.parse(localStorage.getItem('jwt'));\n  \n    // if (jwt && jwt.accessToken) {\n    //   return { Authorization: 'Bearer ' + jwt.accessToken };\n    // } else {\n    //   return {};\n    // }\n\n    if (jwt) {\n      return { Authorization: 'Bearer ' + jwt };\n    } else {\n      return {};\n    }\n  }\n\n  logOut = () => {\n    localStorage.removeItem(\"user\");\n  }\n\n  handlerLoading = () =>\n    // eslint-disable-next-line react/destructuring-assignment\n    (this.state.loading === true ? \"Загрузка данных..\" : \"\");\n\n  // взаимодействие с сервером\n  handlerSaveToServer = () => {\n    const bdRows = store.getState().rootReducer;\n    const currUserEmail = store.getState().rootReducer.currentUser;\n    const jwtToken = store.getState().rootReducer.jwtToken;\n    // console.log(store.getState().rootReducer)\n    const data = {\n      bdRows,\n      currUserEmail,\n      jwtToken\n    };\n    // console.log(data);\n    this.sendBDtoServer(data);\n  };\n\n\n\n  // запустить задачи\n  handlerStartCronTasksOnServer = () => {\n    const data = \"startCronTasks\";\n    this.sendBDtoServer(data);\n    // console.log(data);\n    //console.log(repeatMap.norep);\n    \n\n    // const currDate = new Date();\n    // const currMonth = Number(currDate.getMonth());\n    // console.log(currDate);\n    // console.log(currDate.getMonth());\n    // console.log(currMonth);\n    //const currDate = new Date();\n    // const currDate = \"11.01.2021\";\n    //  console.log(new Date().getDay());\n    //  console.log(Number(\"1\"));\n    // console.log(moment(currDate, \"DD.MM.YYYY\").day());\n   // console.log(moment(currDate, \"DD.MM.YYYY\").date());\n\n  };\n  // остановить задачи\n  handlerStopCronTasksOnServer = () => {\n    const data = \"stopCronTasks\";\n    // console.log(data);\n    this.sendBDtoServer(data);\n  };\n\n  handlerLoadFromServer = () => {\n    const currUserEmail = store.getState().rootReducer.currentUser;\n    console.log(currUserEmail);\n    this.loadBDfromServer(currUserEmail);\n  };\n\n  // отправить данные в БД POST-запрос\n  sendBDtoServer(data) {\n    const url = \"http://localhost:3000/home\";\n    // const url = \"/home\";\n    axios\n      .post(url, {\n        data,\n      })\n      .then((response) => {\n        if (response.statusText === \"OK\") {\n          const res = response.data;\n          console.log(res);\n        }\n      })\n      .catch((error) => {\n        console.log(`Ошибка соединения:${error}`);\n      });\n  }\n\n  // получить данные из БД через GET-запрос\n  loadBDfromServer(currUserEmail) {\n    this.setState({ loading: true });\n    const url = \"http://localhost:3000/load\";\n    // const url = \"/load?currUserEmail=\" + currUserEmail;\n    //const jwtToken = \"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VyIjoidGVzdEB0ZXN0IiwiaWF0IjoxNjExMTMxMjYwfQ.i3s6T950gGaERqmvTPFOFPIA5XS3HBdxFJ4mEPt9Ahk\"\n    //const jwtToken = this.authHeader()\n    //const jwtToken= JSON.parse(localStorage.getItem('jwt').token);\n    const jwtToken= JSON.parse(localStorage.getItem('jwt'));\n    console.log(jwtToken);\n    let config = {\n      headers: {\n        Authorization:`bearer ${jwtToken.token}`\n        // accept: '*/*',\n        // host: 'localhost:3000',\n      }\n    }\n    let data = {aaa:\"!!!\"};\n    axios\n      //.get(url, {\n        .post(url,  data, config)    \n      //      {     \n      //     //  headers: {Authorization:`bearer ${jwtToken.token}`}\n\n      //     //   headers: { \n      //     //     authorization: `Bearer ${jwtToken.token}`,\n      //     //     accept: '*/*',\n      //     //     host: 'localhost:3000',\n      //     // },\n          \n      //       //     headers: {\n      //     //     'authorization': jwtToken.token,\n      //     //     'Accept' : 'application/json',\n      //     //     'Content-Type': 'application/json'\n      //     // }\n      //    //   headers: {\"Authorization\" : `Bearer ${jwtToken.token}`}\n         \n      //       //headers: this.authHeader(), \n      //       //params: {currUserEmail},\n      // })\n      .then((response) => {\n        // console.log(response)\n        let bd;\n        if (response.statusText === \"OK\") {\n          const { data } = response;\n          console.log(\"Данные из БД успешно загружены\");\n           console.log(data);\n          const json = data[0].bdData;\n          bd = JSON.parse(json);\n        }\n        return bd;\n      })\n      .then((bd) => {\n        setTimeout(() => {   ///!!! убрать !!!\n          console.log(\"ожидание..\");\n          store.dispatch(loadBD(bd));\n          this.setState({ loading: false });\n        }, 3000);\n      })\n      .catch((error) => {\n        console.log(`Ошибка соединения:${error}`);\n        this.setState({ loading: false });\n      });\n  }\n\n  render() {\n    const { bdRows } = this.props;\n    return (\n      <div>\n        <Container>\n          <MainInfo bdRows={bdRows} />\n          <MainForm bdRows={bdRows} />\n          <div>\n            <Link to=\"/login\">\n              <button type=\"button\">Войти</button>\n            </Link>\n            <Link to=\"/signup\">\n              <button type=\"button\">Регистрация</button>\n            </Link>\n          </div>\n          <Alert\n            className=\"message__alert_center\"\n            variant=\"light\"\n            id=\"mainLabel\"\n          >\n            {this.handlerLoading()}\n          </Alert>\n          <button type=\"button\" onClick={this.handlerSaveToServer}>SaveToServer</button>\n          <button type=\"button\" onClick={this.handlerLoadFromServer}>LoadFromServer</button>\n          <button type=\"button\" onClick={this.handlerStartCronTasksOnServer}>StartCronTasks</button>\n          <button type=\"button\" onClick={this.handlerStopCronTasksOnServer}>StopCronTasks</button>\n        </Container>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = (store) => ({\n  store,\n  bdRows: store.rootReducer.bdRows,\n});\nconst mapDispatchToProps = (dispatch) => ({\n  goTo: (payload) => {\n    dispatch(push(payload.path));\n  },\n  goOne: (payload) => {\n    dispatch(go(payload.num));\n  },\n  back: () => {\n    dispatch(goBack());\n  },\n  forw: () => {\n    dispatch(goForward());\n  },\n  // delBdRow: newbdRow=>dispatch(delBdRow(newbdRow)),\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(MainPage);\n","import * as React from \"react\";\n// import Avatar from '@material-ui/core/Avatar';\nimport Button from \"@material-ui/core/Button\";\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\nimport TextField from \"@material-ui/core/TextField\";\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\nimport Checkbox from \"@material-ui/core/Checkbox\";\nimport Link from \"@material-ui/core/Link\";\nimport Grid from \"@material-ui/core/Grid\";\nimport Box from \"@material-ui/core/Box\";\n// import LockOutlinedIcon from '@material-ui/icons/LockOutlined';\nimport Typography from \"@material-ui/core/Typography\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Container from \"@material-ui/core/Container\";\nimport axios from \"axios\";\nimport { Route, Switch, Redirect } from \"react-router-dom\";\nimport { history, store } from \"../store/store\";\nimport { loginSaveStore } from \"../actions/actions\";\nimport { connect } from \"react-redux\";\n\nfunction Copyright() {\n  return (\n    <Typography variant=\"body2\" color=\"textSecondary\" align=\"center\">\n      {\"Сервис «Мои уведомления» © \"}\n      {/* <Link color=\"inherit\" href=\"https://material-ui.com/\">\n        Сервис Мои уведомления\n      </Link>{' '} */}\n      {new Date().getFullYear()}\n      .\n    </Typography>\n  );\n}\n\nconst useStyles = makeStyles((theme) => ({\n  paper: {\n    marginTop: theme.spacing(8),\n    display: \"flex\",\n    flexDirection: \"column\",\n    alignItems: \"center\",\n  },\n  avatar: {\n    margin: theme.spacing(1),\n    backgroundColor: theme.palette.secondary.main,\n  },\n  form: {\n    width: \"100%\", // Fix IE11 issue.\n    marginTop: theme.spacing(1),\n  },\n  submit: {\n    margin: theme.spacing(3, 0, 2),\n  },\n}));\n\n\n//export default function SignIn() {\nfunction SignIn(props) {\n  const classes = useStyles();\n\n    // войти по логину и паролю\n  let signInHandler = ()=> {\n    const email = document.getElementById('email').value;\n    const password = document.getElementById('password').value;\n    // const loginData = {\n    //   email: email,\n    //   password: password\n    // }  \n    // console.log(loginData);\n    const url = \"http://localhost:3000/login\";\n    //const url = \"/login\";\n      axios\n        .post(url, {\n          // loginData,\n          //user:\"test@test\"\n          username: email, password: password\n        })\n        .then((response) => {\n          let bd;\n          if (response.statusText === \"OK\") {\n            console.log(response);\n            const jwt = response.data;\n            console.log(jwt);\n           // props.loginSaveStore(jwtData);\n            localStorage.setItem(\"jwt\", JSON.stringify(jwt));\n            console.log(\"Аутентификация прошла успешно, JWT записан в LocalStorage\")\n            bd = true;\n          }\n          return bd;\n        })\n        .then((db) => {\n          if (db) {\n            console.log(\"Переход на главную страницу после аутентификации\");\n            history.push({\n              pathname: '/home',\n              state: { needLoadData: true }\n            })\n          }\n        })\n        .catch((error) => {\n          console.log(`Ошибка соединения:${error}`);\n        });\n    }\n\n\n  return (\n    <Container component=\"main\" maxWidth=\"xs\">\n      <CssBaseline />\n      <div className={classes.paper}>\n        {/* <Avatar className={classes.avatar}>\n          <LockOutlinedIcon />\n        </Avatar> */}\n        <Typography component=\"h1\" variant=\"h5\">\n          Вход\n        </Typography>\n        <form className={classes.form} noValidate>\n          <TextField\n            variant=\"outlined\"\n            margin=\"normal\"\n            required\n            fullWidth\n            id=\"email\"\n            label=\"Email адрес\"\n            name=\"email\"\n            autoComplete=\"email\"\n            autoFocus\n          />\n          <TextField\n            variant=\"outlined\"\n            margin=\"normal\"\n            required\n            fullWidth\n            name=\"password\"\n            label=\"Пароль\"\n            type=\"password\"\n            id=\"password\"\n            autoComplete=\"current-password\"\n          />\n          {/* <FormControlLabel\n            control={<Checkbox value=\"remember\" color=\"primary\" />}\n            label=\"Remember me\"\n          /> */}\n          <Button\n            type=\"button\"\n            fullWidth\n            variant=\"contained\"\n            className={classes.submit}\n            onClick={signInHandler}\n          >\n            Войти\n          </Button>\n          <Grid container>\n            <Grid item xs>\n              <Link href=\"/newpassword\" variant=\"body2\">\n                Забыли пароль?\n              </Link>\n            </Grid>\n            <Grid item>\n              <Link href=\"/signup\" variant=\"body2\">\n                Нет аккаунта? Регистрация\n              </Link>\n            </Grid>\n          </Grid>\n        </form>\n      </div>\n      <Box mt={8}>\n        <Copyright />\n      </Box>\n    </Container>\n  );\n}\n\nconst mapStateToProps = (store) => ({\n\n});\nconst mapDispatchToProps = (dispatch) => ({\n  //loginSaveStore: (loginData) => dispatch(loginSaveStore(loginData)),\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(SignIn);","import * as React from \"react\";\n// import Avatar from '@material-ui/core/Avatar';\nimport Button from \"@material-ui/core/Button\";\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\nimport TextField from \"@material-ui/core/TextField\";\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\nimport Checkbox from \"@material-ui/core/Checkbox\";\n// import Link from '@material-ui/core/Link';\nimport Grid from \"@material-ui/core/Grid\";\nimport Box from \"@material-ui/core/Box\";\n// import LockOutlinedIcon from '@material-ui/icons/LockOutlined';\nimport Typography from \"@material-ui/core/Typography\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Container from \"@material-ui/core/Container\";\nimport { Link } from \"react-router-dom\";\n\nfunction Copyright() {\n  return (\n    <Typography variant=\"body2\" color=\"textSecondary\" align=\"center\">\n      {\"Сервис «Мои уведомления» © \"}\n      {/* <Link color=\"inherit\" href=\"https://material-ui.com/\">\n        Сервис Мои уведомления\n      </Link>{' '} */}\n      {new Date().getFullYear()}\n      .\n    </Typography>\n  );\n}\n\nconst useStyles = makeStyles((theme) => ({\n  paper: {\n    marginTop: theme.spacing(8),\n    display: \"flex\",\n    flexDirection: \"column\",\n    alignItems: \"center\",\n  },\n  avatar: {\n    margin: theme.spacing(1),\n    backgroundColor: theme.palette.secondary.main,\n  },\n  form: {\n    width: \"100%\", // Fix IE11 issue.\n    marginTop: theme.spacing(3),\n  },\n  submit: {\n    margin: theme.spacing(3, 0, 2),\n  },\n}));\n\nexport default function SignUp() {\n  const classes = useStyles();\n\n  return (\n    <Container component=\"main\" maxWidth=\"xs\">\n      <CssBaseline />\n      <div className={classes.paper}>\n        {/* <Avatar className={classes.avatar}>\n          <LockOutlinedIcon />\n        </Avatar> */}\n        <Typography component=\"h1\" variant=\"h5\">\n        Регистрация\n        </Typography>\n        <form className={classes.form} noValidate>\n          <Grid container spacing={2}>\n            <Grid item xs={12}>\n              <TextField\n                variant=\"outlined\"\n                required\n                fullWidth\n                id=\"email\"\n                label=\"Email адрес\"\n                name=\"email\"\n                autoComplete=\"email\"\n              />\n            </Grid>\n            <Grid item xs={12}>\n              <TextField\n                variant=\"outlined\"\n                required\n                fullWidth\n                name=\"password\"\n                label=\"Пароль\"\n                type=\"password\"\n                id=\"password\"\n                autoComplete=\"current-password\"\n              />\n            </Grid>\n            <Grid item xs={12}>\n              <TextField\n                variant=\"outlined\"\n                required\n                fullWidth\n                name=\"passwordRpt\"\n                label=\"Повтор пароля\"\n                type=\"password\"\n                id=\"passwordRpt\"\n                autoComplete=\"current-password\"\n              />\n            </Grid>\n            {/* <Grid item xs={12}>\n              <FormControlLabel\n                control={<Checkbox value=\"allowExtraEmails\" color=\"primary\" />}\n                label=\"I want to receive inspiration, marketing promotions and updates via email.\"\n              />\n            </Grid> */}\n          </Grid>\n          <Button\n            type=\"submit\"\n            fullWidth\n            variant=\"contained\"\n            className={classes.submit}\n          >\n            <Link to=\"/signup\">Регистрация</Link>\n          </Button>\n          <Grid container justifyContent=\"flex-end\">\n            <Grid item>\n              <Link href=\"/login\" variant=\"body2\">\n                Уже есть аккаунт? Войти\n              </Link>\n            </Grid>\n          </Grid>\n        </form>\n      </div>\n      <Box mt={5}>\n        <Copyright />\n      </Box>\n    </Container>\n  );\n}\n","import * as React from \"react\";\r\n// import Avatar from '@material-ui/core/Avatar';\r\nimport Button from \"@material-ui/core/Button\";\r\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\r\nimport Checkbox from \"@material-ui/core/Checkbox\";\r\nimport Link from \"@material-ui/core/Link\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport Box from \"@material-ui/core/Box\";\r\n// import LockOutlinedIcon from '@material-ui/icons/LockOutlined';\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Container from \"@material-ui/core/Container\";\r\n\r\nfunction Copyright() {\r\n  return (\r\n    <Typography variant=\"body2\" color=\"textSecondary\" align=\"center\">\r\n      {\"Сервис «Мои уведомления» © \"}\r\n      {/* <Link color=\"inherit\" href=\"https://material-ui.com/\">\r\n        Сервис Мои уведомления\r\n      </Link>{' '} */}\r\n      {new Date().getFullYear()}\r\n      .\r\n    </Typography>\r\n  );\r\n}\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  paper: {\r\n    marginTop: theme.spacing(8),\r\n    display: \"flex\",\r\n    flexDirection: \"column\",\r\n    alignItems: \"center\",\r\n  },\r\n  avatar: {\r\n    margin: theme.spacing(1),\r\n    backgroundColor: theme.palette.secondary.main,\r\n  },\r\n  form: {\r\n    width: \"100%\", // Fix IE11 issue.\r\n    marginTop: theme.spacing(1),\r\n  },\r\n  submit: {\r\n    margin: theme.spacing(3, 0, 2),\r\n  },\r\n  text: {\r\n    margin: theme.spacing(2, 0, 2),\r\n  },\r\n}));\r\n\r\nexport default function SignIn() {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <Container component=\"main\" maxWidth=\"xs\">\r\n      <CssBaseline />\r\n      <div className={classes.paper}>\r\n        {/* <Avatar className={classes.avatar}>\r\n          <LockOutlinedIcon />\r\n        </Avatar> */}\r\n        <Typography component=\"h1\" variant=\"h6\">\r\n          Новый пароль будет выслан на Ваш email адрес\r\n        </Typography>\r\n        <form className={classes.form} noValidate>\r\n          <Button\r\n            type=\"submit\"\r\n            fullWidth\r\n            variant=\"contained\"\r\n            className={classes.submit}\r\n          >\r\n            Сменить пароль\r\n          </Button>\r\n        {/* <Typography component=\"p\" variant=\"p\" className={classes.text}>\r\n          Новый пароль будет выслан на Ваш email адрес\r\n        </Typography> */}\r\n          <Grid container>\r\n            <Grid item xs>\r\n              <Link href=\"/home\" variant=\"body2\">\r\n                На главную\r\n              </Link>\r\n            </Grid>\r\n          </Grid>\r\n        </form>\r\n      </div>\r\n      <Box mt={3}>\r\n        <Copyright />\r\n      </Box>\r\n    </Container>\r\n  );\r\n}\r\n","// Prettier - CTRL + SHIFT + P - Format Document\n\nimport React from \"react\";\nimport \"./style.scss\";\nimport { Route, Switch, Redirect } from \"react-router-dom\";\nimport MainPage from \"./pages/main-page\";\nimport SignIn from \"./pages/sign-in\";\nimport SignUp from \"./pages/sign-up\";\nimport NewPass from \"./pages/new-password\";\nimport { history, store } from \"./store/store\";\nimport _ from \"lodash\";\n\nimport axios from \"axios\";\n\ntype IProps = any\ntype IState = { loggedIn: boolean };\nclass App extends React.PureComponent<IProps, IState> {\n  constructor(props:IProps) {\n    super(props);\n    this.state = {loggedIn: false}\n  }\n  componentDidMount(){\n    const currentUser = store.getState().rootReducer.currentUser;\n    const jwtToken = store.getState().rootReducer.jwtToken;\n    if (currentUser && !_.isEmpty(jwtToken)){\n      this.setState({loggedIn: true});\n    }else{\n      this.setState({loggedIn: false});\n    }\n  }\n\n// getStartAuth = (currUserEmail:string) => {\n//   const url = \"/\";\n//   // const url = \"/load?currUserEmail=\" + currUserEmail;\n//   axios\n//     .get(url, {\n//       params: {\n//         currUserEmail,\n//       },\n//     })\n//     .then((response) => {\n//       // console.log(response)\n//       if (response.statusText === \"OK\") {\n//         console.log(\"!!!\")\n//       }\n//     })\n//     .catch((error) => {\n//       console.log(`Ошибка запуска приложения:${error}`);\n//     });\n// }\n\n  render() {\n    return (\n      <>\n        <Switch>\n          <Route history={history} path=\"/signup\" component={SignUp} />\n          <Route history={history} path=\"/login\" component={SignIn} />\n          <Route history={history} path=\"/newpassword\" component={NewPass} />\n          <Route history={history} path=\"/home\" component={MainPage} />\n          {/* <Route exact path=\"/\" render={() => (<Redirect to=\"/home\" />)} />  */}\n          {/* <Route path=\"/\" component={MainPage} /> */}\n          {/* <Route path=\"/\"  /> */}\n          {/* <Route exact path=\"/\" render={() => {\n                 this.getStartAuth(\"\");\n                 return <MainPage />;\n            }\n          }/>  */}\n           {/* <Route exact path=\"/\" render={() => (<Redirect to=\"/home\" />)} onChange={this.getStartAuth(\"\")} />  */}\n           <Route exact path=\"/\">\n            {this.state.loggedIn ? <Redirect to=\"/home\" /> : <SignIn />}\n          </Route>\n        </Switch>\n      </>\n    );\n  }\n}\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","// import 'react-app-polyfill/ie11';\n// import 'react-app-polyfill/stable';\nimport React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { Provider } from \"react-redux\";\nimport { ConnectedRouter } from \"connected-react-router\";\nimport { store, history } from \"./store/store\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\n\nReactDOM.render(\n  <Provider store={store}>\n    <ConnectedRouter history={history}>\n      <App />\n    </ConnectedRouter>\n  </Provider>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}